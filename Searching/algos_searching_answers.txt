Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using linear search?
  It would take seven iterations.


Given the alphabetically sorted collection in this checkpoint, how many iterations would it take to find the value G using binary search?
  It would take two iterations.


Calculate fib(10), fib(11), fib(12) by hand.
  fib(10)
    0: 0, 1: 1, 2: 1, 3: 2, 4: 3, 5: 5, 6: 8 , 7: 13 , 8: 21 , 9: 34, 10: 55

  fib(11)
    0: 0, 1: 1, 2: 1, 3: 2, 4: 3, 5: 5, 6: 8 , 7: 13 , 8: 21 , 9: 34, 10: 55, 11: 89
  fib(12)
    0: 0, 1: 1, 2: 1, 3: 2, 4: 3, 5: 5, 6: 8 , 7: 13 , 8: 21 , 9: 34, 10: 55, 11: 89, 12: 144

Given an unsorted collection of a million items, which algorithm would you choose between linear search and binary search? Would you use an iterative or recursive solution? Explain your reasoning.
  In an unsorted collection, linear search would be more accurate since you would have to go through each value to find the answer. Binary search would likely lead you astray since you cannot divide the values by half since they are not in order. I would use an iterative solution in this case as well since it would require a simple loop to iterate through each solution.


Given a sorted collection of a million items, which algorithm would you choose between linear search and binary search? Would you use an iterative or recursive solution? Explain your reasoning.
  In a sorted collection of items, binary search is significantly more efficient. I would use recursion as well for maximum efficiency. 
